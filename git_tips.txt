1.git reset --hard commit_id/head^/head~10 # 返回以前版本
2.git reflog # 查看命令历史，确定退回哪个版本
3.git log # 查看提交历史
4. {
		$ ssh-keygen -t rsa -C "youremail@example.com"
		你需要把邮件地址换成你自己的邮件地址，然后一路回车，使用默认值即可，由于这个Key也不是用于军事目的，所以也无需设置密码。

		如果一切顺利的话，可以在用户主目录里找到.ssh目录，里面有id_rsa和id_rsa.pub两个文件，这两个就是SSH Key的秘钥对，id_rsa是私钥，不能泄露出去，id_rsa.pub是公钥，可以放心地告诉任何人。

		第2步：登陆GitHub，打开“Account settings”，“SSH Keys”页面：

		然后，点“Add SSH Key”，填上任意Title，在Key文本框里粘贴id_rsa.pub文件的内容：
	}
5.git checkout -- file # 撤销工作区所有文件未提交操作
6.git reset HEAD file # 撤销add的修改
7.git remote add (name of remote hub) git@github.com:Username/repository
8.git push -u (name of remote hub) (name of branches) # -u仅第一次提交时表示与github的分支关联，之后提交可省略
9. {
		你也许还注意到，GitHub给出的地址不止一个，还可以用https://github.com/michaelliao/gitskills.git这样的地址。实际上，Git支持多种协议，默认的git://使用ssh，但也可以使用https等其他协议。

		使用https除了速度慢以外，还有个最大的麻烦是每次推送都必须输入口令，但是在某些只开放http端口的公司内部就无法使用ssh协议而只能用https。
	}
10.git clone git@...... 
11.git checkout -b dev==git branch dev + git checkout dev # 创建并转到新分支
12.git branch # 查看分支情况
13.git merge dev # 转移到master 后 合并dev
14.git branch -d dev # 删除分支
15.转换分支前若修该了某文件，会自动上传